FROM ubuntu:20.04
ARG HOME_DIR=/app
ARG DEBIAN_FRONTEND=noninteractive
ARG LOG_DIR=${HOME_DIR}/logs
ENV PYTHONPATH="${PYTHONPATH}:${HOME_DIR}"

# Install dependencies 
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libncurses5-dev \
    libreadline-dev \
    libsqlite3-dev \
    libgdbm-dev \
    libdb5.3-dev \
    libbz2-dev \
    libexpat1-dev \
    liblzma-dev \
    libffi-dev \
    wget \
    curl \
    cmake \
    git \
    g++ \
    python3.8 \
    python3-pip \
    autotools-dev \
    libicu-dev \
    libbz2-dev \
    libboost-all-dev \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Copy files over
WORKDIR ${HOME_DIR}
COPY . .

# Build and compile C++ files
WORKDIR ${HOME_DIR}/src/cpp_compiler
RUN rm -rf ${HOME_DIR}/src/cpp_compiler/CMakeCache.txt
RUN cmake --clean-first .
RUN make

# Install package
WORKDIR ${HOME_DIR}
RUN pip install -e .

WORKDIR ${HOME_DIR}/worker/transpiler
RUN pip install -r requirements.txt

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && ~/.cargo/bin/rustup --version  # Verify Rust installation

# Set Cargo path
ENV PATH="/root/.cargo/bin:${PATH}"

# Build optimizer executable
WORKDIR ${HOME_DIR}/qarrot-optimizer
RUN cargo build --release

WORKDIR ${HOME_DIR}
RUN mkdir ${LOG_DIR}

CMD ["python3", "worker/transpiler_node.py"]
